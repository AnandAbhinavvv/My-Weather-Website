{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\Web Devlopment\\\\My Weather App\\\\src\\\\forcast.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  function setTheQuery({\n    target: {\n      name,\n      value\n    }\n  }) {\n    console.log(value);\n  }\n\n  const search = city => {\n    axios.get(`${apiKeys.base}weather?q=${city != \"[object Object]\" ? city : query}&units=metric&APPID=${apiKeys.key}`).then(response => {\n      setWeather(response.data);\n      setQuery(\"\");\n    }).catch(function (error) {\n      console.log(error);\n      setWeather(\"\");\n      setQuery(\"\");\n      setError({\n        message: \"Not Found\",\n        query: query\n      });\n    });\n  };\n\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    } // add zero in front of numbers < 10\n\n\n    return i;\n  }\n\n  const defaults = {\n    color: \"white\",\n    size: 112,\n    animate: true\n  };\n  useEffect(() => {\n    search(\"Delhi\");\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactAnimatedWeather, {\n    icon: props.icon,\n    color: defaults.color,\n    size: defaults.size,\n    animate: defaults.animate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, props.weather), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search any city\",\n    onChange: setTheQuery // value={query}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.avishkaar.cc/workflow/newhp/search-white.png\",\n    onClick: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n    className: \"cityHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"temp\",\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Temperature\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.temp), \"\\xB0c (\", weather.weather[0].main, \")\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Humidity\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.humidity), \"%\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Visibility\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, Math.round(weather.visibility), \" mi\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Wind Speed\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, Math.round(weather.wind.speed), \" Km/h\"))) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, error.query, \" \", error.message))));\n}\n\nexport default Forcast;","map":{"version":3,"sources":["E:/Coding/Web Devlopment/My Weather App/src/forcast.js"],"names":["React","useState","useEffect","Component","axios","apiKeys","ReactAnimatedWeather","Forcast","props","query","setQuery","error","setError","weather","setWeather","setTheQuery","target","name","value","console","log","search","city","get","base","key","then","response","data","catch","message","checkTime","i","defaults","color","size","animate","icon","main","sys","country","Math","round","temp","humidity","visibility","wind","speed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  function setTheQuery({target:{name,value}}){\n    console.log(value);\n  }\n\n  const search = (city) => {\n    axios\n      .get(\n        `${apiKeys.base}weather?q=${\n          city != \"[object Object]\" ? city : query\n        }&units=metric&APPID=${apiKeys.key}`\n      )\n      .then((response) => {\n        setWeather(response.data);\n        setQuery(\"\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        setWeather(\"\");\n        setQuery(\"\");\n        setError({ message: \"Not Found\", query: query });\n      });\n  };\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    } // add zero in front of numbers < 10\n    return i;\n  }\n\n  const defaults = {\n    color: \"white\",\n    size: 112,\n    animate: true,\n  };\n\n  useEffect(() => {\n    search(\"Delhi\");\n  }, []);\n\n  return (\n    <div className=\"forecast\">\n      <div className=\"forecast-icon\">\n        <ReactAnimatedWeather\n          icon={props.icon}\n          color={defaults.color}\n          size={defaults.size}\n          animate={defaults.animate}\n        />\n      </div>\n      <div className=\"today-weather\">\n        <h3>{props.weather}</h3>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search any city\"\n            onChange={setTheQuery}\n            // value={query}\n          />\n          <div className=\"img-box\">\n            {\" \"}\n            <img\n              src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\n              onClick={search}\n            />\n          </div>\n        </div>\n        <ul>\n          {typeof weather.main != \"undefined\" ? (\n            <div>\n              {\" \"}\n              <li className=\"cityHead\">\n                <p>\n                  {weather.name}, {weather.sys.country}\n                </p>\n                <img\n                  className=\"temp\"\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                />\n              </li>\n              <li>\n                Temperature{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.temp)}°c ({weather.weather[0].main})\n                </span>\n              </li>\n              <li>\n                Humidity{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.humidity)}%\n                </span>\n              </li>\n              <li>\n                Visibility{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.visibility)} mi\n                </span>\n              </li>\n              <li>\n                Wind Speed{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.wind.speed)} Km/h\n                </span>\n              </li>\n            </div>\n          ) : (\n            <li>\n              {error.query} {error.message}\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default Forcast;\n"]},"metadata":{},"sourceType":"module"}